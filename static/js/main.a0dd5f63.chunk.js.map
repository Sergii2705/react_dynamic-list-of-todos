{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoID","onSelectedTodoID","className","map","id","title","completed","cn","type","onClick","TodoFilter","filteringBy","changeFiltering","query","changeQuery","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","onCloseModal","useState","userInfo","setUserInfo","userId","useEffect","getUser","href","email","name","App","setTodos","setFilteringBy","setQuery","setSelectedTodoID","isLoading","setIsLoading","finally","visibleTodos","useMemo","filter","todo","includes","toLowerCase","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0dd5f63.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoID: number | null;\n  onSelectedTodoID: (todoID: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoID,\n  onSelectedTodoID,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({ id, title, completed }) => (\n        <tr\n          data-cy=\"todo\"\n          key={id}\n          className={cn({\n            'has-background-info-light': selectedTodoID === id,\n          })}\n        >\n          <td className=\"is-vcentered\">{id}</td>\n          <td className=\"is-vcentered\">\n            {completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={`has-text-${completed ? 'success' : 'danger'}`}>\n              {title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodoID(id)}\n            >\n              <span className=\"icon\">\n                <i className={\n                  `far fa-eye${selectedTodoID === id ? '-slash' : ''}`\n                }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ninterface Props {\n  filteringBy: string,\n  changeFiltering: (filteringBy: string) => void,\n  query: string,\n  changeQuery: (query: string) => void,\n}\n\nexport const TodoFilter: FC<Props> = ({\n  filteringBy,\n  changeFiltering,\n  query,\n  changeQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filteringBy}\n          onChange={(event) => changeFiltering(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => changeQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {!!query.length && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => changeQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo,\n  onCloseModal: (todo: null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onCloseModal,\n}) => {\n  const [userInfo, setUserInfo] = useState<User | null>(null);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUserInfo);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userInfo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCloseModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${userInfo.email}`}>\n                {userInfo.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteringBy, setFilteringBy] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodoID, setSelectedTodoID] = useState<number | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(() => (\n    todos.filter(todo => {\n      const { title, completed } = todo;\n\n      if (!title.includes(query.toLowerCase())) {\n        return false;\n      }\n\n      return filteringBy === 'all'\n        ? true\n        : completed === (filteringBy === 'completed');\n    })\n  ), [todos, filteringBy, query]);\n\n  const selectedTodo = useMemo(() => (\n    visibleTodos.find(({ id }) => id === selectedTodoID) || null\n  ), [visibleTodos, selectedTodoID]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filteringBy={filteringBy}\n                changeFiltering={setFilteringBy}\n                query={query}\n                changeQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoID={selectedTodoID}\n                    onSelectedTodoID={setSelectedTodoID}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal selectedTodo={selectedTodo} onCloseModal={setSelectedTodoID} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}